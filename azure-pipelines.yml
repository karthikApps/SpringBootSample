trigger:
- main

variables:
  # Web app name
  webAppName: 'javawebapp0001'
  environmentName: 'javawebapp0001'

  # Docker Registry service connection and repository
  dockerRegistryServiceConnection: 'DockerServiceConnection'  # Make sure this matches your service connection name
  containerRegistry: 'karthik1n/springbootsamplerepo'  # Docker Hub repository (if using Docker Hub)
  imageName: 'my-app'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: MavenPackageAndPublishArtifacts
    displayName: Maven Package and Publish Artifacts
    pool:
      name: mylocal
      demands: Agent.Name -equals MSI
    steps:
    - task: CmdLine@2
      displayName: 'Check Maven Version'
      inputs:
        script: 'mvn -version'

    - task: Maven@4
      displayName: 'Maven Package'
      inputs:
        mavenPomFile: '$(Build.SourcesDirectory)/pom.xml'
        goals: 'clean install'
        options: '-X'

    - task: CopyFiles@2
      displayName: 'Copy Files to artifact staging directory'
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: '**/target/*.?(war|jar)'
        TargetFolder: $(Build.ArtifactStagingDirectory)

    - upload: $(Build.ArtifactStagingDirectory)
      artifact: drop

- stage: Docker
  displayName: Docker build and push stage
  variables:
    imageName: 'my-app'  # The name of the Docker image
    dockerRegistryServiceConnection: 'DockerServiceConnection'  # Service connection for Docker registry
    containerRegistry: 'karthik1n/springbootsamplerepo'  # Docker Hub repository (if using Docker Hub)

  jobs:
  - job: DockerBuildAndPush
    displayName: Build and Push Docker Image
    pool:
      name: mylocal
      demands: Agent.Name -equals MSI

    steps:
    - task: CmdLine@2
      displayName: 'Check Docker Version'
      inputs:
        script: 'docker --version'

    - task: Docker@2
      displayName: 'Login to Docker Registry'
      inputs:
        command: 'login'
        containerRegistry: $(dockerRegistryServiceConnection)  # Reference your service connection here

    - task: Docker@2
      displayName: 'Build Docker Image'
      inputs:
        command: 'build'
        Dockerfile: '$(Build.SourcesDirectory)/Dockerfile'  # Path to Dockerfile
        buildContext: '$(Build.SourcesDirectory)'  # Build context
        tags: '$(containerRegistry)/$(imageName):$(Build.BuildId)'  # Tagging the image with the build ID
        options: '--no-cache --progress=plain'

    - task: Docker@2
      displayName: 'Push Docker Image'
      inputs:
        command: 'push'
        containerRegistry: $(dockerRegistryServiceConnection)  # Reference your service connection here
        imageName: '$(containerRegistry)/$(imageName):$(Build.BuildId)'  # Correct image name and tag
